name: Build Releases
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true
        type: string
jobs:
  build-linux-arm64:
    runs-on: ubuntu_latest
    name: Build on ubuntu_latest arm64
    steps:
      - uses: actions/checkout@v4

      - uses: uraimo/run-on-arch-action@v2
        name: Build Release
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu_latest
          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}
          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            bash ./nb/build_linux_static.sh
            echo "ls -al release/*"
            file release/nbng

      - name: Package
        shell: bash
        run: |
          tar cvfJ release/nbng.linux.arm64.tar.xz release/nbng
          rm release/nbng

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}

  # build-macos:
  #   runs-on: macos-latest
  #   env:
  #     BUILD_OS: "macos"
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       target:
  #         - aarch64-apple-darwin
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install GNU tar
  #       if: runner.os == 'macOS'
  #       run: |
  #         brew install gnu-tar
  #         # echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
  #         echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

  #     - name: Build release
  #       shell: bash
  #       run: |
  #         bash ./nb/build_macos.sh
      
  #     - name: Package
  #       shell: bash
  #       run: |
  #         tar cvfJ release/nbng.macos.arm64.tar.xz release/nbng
  #         rm release/nbng

  #     - name: Upload Github Assets
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: release/*
  #         prerelease: ${{ contains(github.ref_name, '-') }}
  #         tag_name: ${{ inputs.tag || github.ref_name }}
