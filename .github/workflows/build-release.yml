name: Build Releases
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true
        type: string

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    name: Build on linux x64
    steps:
      - uses: actions/checkout@v4

      - name: Build release
        shell: bash
        run: |
          uname -a
          bash ./nb/build_linux_static.sh
          echo "ls -al release/*"
          file release/nbng

      - name: Package
        shell: bash
        run: |
          cd release
          tar cvfJ nbng.linux.x64.tar.xz nbng
          cd ..
          ls -al release/

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/nbng.linux.x64.tar.xz
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}


  build-linux-arm64:
    runs-on: ubuntu-22.04
    name: Build on linux arm64
    steps:
      - uses: actions/checkout@v4

      - uses: uraimo/run-on-arch-action@v2
        name: Build Release
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            
          run: |
            uname -a
            apt update -q -y
            apt install -q -y git build-essential tar bzip2 cmake ninja-build gzip file
            bash ./nb/build_linux_static.sh
            # Produce a binary artifact and place it in the mounted volume
            cp release/nbng "/artifacts/nbng"
            echo "Produced artifact at /artifacts/nbng"
      
      - name: Show the results file
        # Items placed in /artifacts in the container will be in ${PWD}/artifacts on the host.
        run: |
          ls -al "${PWD}/artifacts"
          file "${PWD}/artifacts/nbng"

      - name: Package
        shell: bash
        run: |
          cd "${PWD}/artifacts"
          tar cvfJ nbng.linux.arm64.tar.xz "nbng"
          cd ..
          ls -al "${PWD}/artifacts"

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/nbng.linux.arm64.tar.xz
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}


  build-macos:
    runs-on: macos-latest
    env:
      BUILD_OS: "macos"
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install GNU tar
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          # echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - name: Build release
        shell: bash
        run: |
          bash ./nb/build_macos.sh
      
      - name: Package
        shell: bash
        run: |
          cd release
          tar cvfJ nbng.macos.arm64.tar.xz nbng
          cd ..
          ls -al release/

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/nbng.macos.arm64.tar.xz
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}
